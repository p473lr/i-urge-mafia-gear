/***************************************************************************
*                             INCLUDED FILES
***************************************************************************/

#include <string>
#include <iostream>

using namespace std;

struct
{
    char   c;
    string s;
} huffmanTable[] =
{
    { ' ',  "00" },
    { 'M',  "01000" },
    { '.',  "010010" },
    { 'P',  "010011" },
    { 'F',  "01010" },
    { 'G',  "010110" },
    { '2',  "010111000" },
    { 'Q',  "010111001" },
    { '!',  "01011101000" },
    { '7',  "01011101001" },
    { '5',  "0101110101" },
    { '0',  "010111011" },
    { ',',  "01011110" },
    { 'J',  "01011111000" },
    { '?',  "0101111100100" },
    { '9',  "0101111100101" },
    { '4',  "010111110011" },
    { 'X',  "0101111101" },
    { 'K',  "010111111" },
    { 'I',  "0110" },
    { 'N',  "0111" },
    { 'A',  "1000" },
    { 'O',  "1001" },
    { 'L',  "10100" },
    { 'H',  "10101" },
    { 'C',  "10110" },
    { 'Y',  "101110" },
    { 'U',  "101111" },
    { 'T',  "1100" },
    { 'D',  "11010" },
    { 'B',  "110110" },
    { 'W',  "1101110" },
    { '1',  "110111100" },
    { '6',  "11011110100" },
    { '8',  "11011110101" },
    { 'Z',  "11011110110" },
    { '3',  "11011110111" },
    { 'V',  "11011111" },
    { 'R',  "11100" },
    { 'S',  "11101" },
    { 'E',  "1111" },
    {   0,  "" }
};



int main (int argc, char *argv[])
{
    char c;
    int i, bitCount, byteCount;
    bitCount = 0;
    byteCount = 0;
    string s;

    s = "";
    while( cin >> c )
    {
        if( c == '1' || c == '0' )
        {
            ++bitCount;
            s += c;
            for( i=0; huffmanTable[i].c; i++ )
            {
                if( huffmanTable[i].s == s )
                {
                    cout << huffmanTable[i].c;
                    ++byteCount;
                    s = "";
                    break;
                }
            }
        }
    }
    cout << endl;
    cout << "message bits: " << byteCount*8 << endl;
    cout << "compressed bits: " << bitCount << endl;

}
